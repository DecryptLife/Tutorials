{
	"info": {
		"_postman_id": "640d0d09-aed8-4795-ab5f-28e070469079",
		"name": "JWT Authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28418339"
	},
	"item": [
		{
			"name": "With Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()",
									"console.log(jsonData.token)",
									"pm.environment.set(\"jwt_token\", jsonData.token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"benson\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_products",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/products_auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"products_auth"
							]
						}
					},
					"response": []
				}
			],
			"description": "- Initially we login using the user credentiation and this generates the token which is stored under Auhtoization =>Bearer Token => {{jwt_token}}\n    \n- Doing the above we make all the subsequent calls to have the token sucht that we don't have to do it manually.\n    \n- Second calls tries to access the products of specific user based on username and requires authentication to do so"
		},
		{
			"name": "No Authentication",
			"item": [
				{
					"name": "Without Auth",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Without Auth Requies Auth",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"description": "First GET request returns the result as the API call doesn't require authentication\n\nWhen an attempt is made to call the second API call we get the response \"Unauthorized\" as that particular request requires authentication"
		}
	]
}